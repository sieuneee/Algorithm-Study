#include <iostream>

using namespace std;

int block[19][4][2] = {
    {{0, 0}, {0, 1}, {0, 2}, {0, 3}}, //1
    {{0, 0}, {1, 0}, {2, 0}, {2, 1}}, //2
    {{0, 0}, {1, 0}, {1, 1}, {2, 1}}, //3
    {{0, 0}, {0, 1}, {1, 0}, {1, 1}}, //4
    {{0, 0}, {0, 1}, {1, 1}, {0, 2}}, //5
    {{0, 0}, {1, 0}, {2, 0}, {3, 0}}, //1
    {{0, 0}, {1, 0}, {2, 0}, {2, -1}}, //2
    {{0, 0}, {1, 0}, {2, 0}, {0, 1}}, //2
    {{0, 0}, {1, 0}, {2, 0}, {0, -1}}, //2
    {{0, 0}, {0, 1}, {0, 2}, {1, 2}}, //2
    {{0, 0}, {0, 1}, {0, 2}, {-1, 2}}, //2
    {{0, 0}, {0, 1}, {0, 2}, {1, 0}}, //2
    {{0, 0}, {0, 1}, {0, 2}, {-1, 0}}, //2
    {{0, 0}, {1, 0}, {1, -1}, {2, -1}}, //3
    {{0, 0}, {0, 1}, {-1, 1}, {-1, 2}}, //3
    {{0, 0}, {0, 1}, {1, 1}, {1, 2}}, //3
    {{0, 0}, {0, 1}, {-1, 1}, {0, 2}}, //5
    {{0, 0}, {1, 0}, {2, 0}, {1, 1}}, //5
    {{0, 0}, {1, 0}, {2, 0}, {1, -1}} //5
};
int arr[500][500];
int n, m;

int sol(int type){
    int max = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            int tmp = 0;
            for(int k=0;k<4;k++){
                if((i+block[type][k][0] > n-1 || i+block[type][k][0] < 0) || (j+block[type][k][1] > m-1 || j+block[type][k][1] < 0)) {
                    tmp = 0;
                    break;
                }
                tmp += arr[i+block[type][k][0]][j+block[type][k][1]];
            }
            if(tmp > max) max = tmp;
        }
    }
    return max;
}

int main(){
    cin >> n >> m;
    
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin >> arr[i][j];
        }
    }
    
    int max = 0;
    for(int i=0;i<19;i++){
        int tmp = sol(i);
        if(tmp > max) max = tmp;
    }
    cout << max;
    
    return 0;
}
